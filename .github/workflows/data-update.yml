name: Update Stock Data

on:
  workflow_dispatch:
    inputs:
      skip_delay:
        description: 'Skip waiting for 9:29 AM IST'
        required: false
        default: 'false'
      force_run:
        description: 'Run even on weekends'
        required: false
        default: 'false'

  schedule:
    # Run at 3:54 AM UTC (9:24 AM IST) Monday-Friday with buffer time
    - cron: '54 3 * * 1-5'

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 15
    
    steps:
      # --- CHECK DAY OF WEEK ---
      - name: Check if weekday
        if: github.event_name == 'schedule' && inputs.force_run != 'true'
        id: check_weekday
        run: |
          DAY_OF_WEEK=$(date -u +%u)  # 1=Monday, 7=Sunday
          if [ $DAY_OF_WEEK -ge 1 ] && [ $DAY_OF_WEEK -le 5 ]; then
            echo "Today is weekday ($DAY_OF_WEEK), proceeding..."
            echo "is_weekday=true" >> $GITHUB_OUTPUT
          else
            echo "Today is weekend ($DAY_OF_WEEK), skipping..."
            echo "is_weekday=false" >> $GITHUB_OUTPUT
          fi

      # --- TIMER DELAY UNTIL 9:29 AM IST ---
      - name: Delay until 9:29 AM IST
        if: |
          (github.event_name == 'schedule' && steps.check_weekday.outputs.is_weekday == 'true') ||
          (github.event_name == 'workflow_dispatch' && inputs.skip_delay == 'false')
        run: |
          echo "Current UTC time: $(date -u)"
          echo "Current IST time: $(TZ='Asia/Kolkata' date)"
          
          # Get current epoch time
          current_epoch=$(date +%s)
          
          # Calculate target epoch for 9:29 AM IST today
          target_epoch=$(date -d "TZ=\"Asia/Kolkata\" 09:29:00" +%s)
          
          sleep_seconds=$((target_epoch - current_epoch))
          
          echo "Current epoch: $current_epoch"
          echo "Target epoch: $target_epoch"
          echo "Sleep seconds: $sleep_seconds"
          
          if [ $sleep_seconds -gt 0 ]; then
            echo "⏰ Waiting until 9:29 AM IST (${sleep_seconds}s)..."
            sleep $sleep_seconds
            echo "✅ Reached 9:29 AM IST - proceeding with execution"
          elif [ $sleep_seconds -lt -300 ]; then  # More than 5 minutes past
            echo "❌ Too far past target time (more than 5 minutes), exiting..."
            exit 1
          else
            echo "⚠️ Already past 9:29 AM IST, proceeding immediately"
          fi

      # --- MAIN EXECUTION ---
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create results directory
        run: mkdir -p results_pkl

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yfinance==0.2.61 pandas numpy

      - name: Run data download script
        run: |
          echo "🚀 Actual execution started at: $(date -u)"
          echo "📍 IST time: $(TZ='Asia/Kolkata' date)"
          python DataStore.py
          echo "✅ Execution completed at: $(date -u)"
          echo "📍 IST time: $(TZ='Asia/Kolkata' date)"

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet --staged || git diff --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected, will commit"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add results_pkl/*.pkl
          git commit -m "Update stock data $(TZ='Asia/Kolkata' date +'%Y-%m-%d %H:%M IST') [skip ci]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: No changes notification
        if: steps.check_changes.outputs.has_changes == 'false'
        run: echo "✅ No changes detected in results_pkl directory"
